#cloud-config
## For the master, use this as-is, then connect
## and execute: kube-init <your-public-ip>
## For the workers, remove the '#' from the line 
## below the 'runcmd:' (but LEAVE THE '-').
## then replaces the values 'XXXX'  with the values
## shown by kube-init when it finish running.
## Hint: you can actually copy the entire line starting with "kubeadm"
## and past over the "kubeadm" example below (again, leave the '-' at the beginnig).
## ** Begin Mandatory Edits (for workers) here! **
runcmd:
#- kubeadm 127.0.0.1:6444 --token XXX.XXX --discovery-token-ca-cert-hash sha256:XXX
## ** End   Mandatory Edits  **
## ** Begin Optional  Edits ** 
## If you do not have an user, 
## you may set your root password
## uncommenting this section
## and setting your own password
#chpasswd:
#   list:
#      - root:Change-me!
packages: 
    # you can change kubernetes version 
    - kubeadm=1.13.1-00
    - kubelet=1.13.1-00
    - kubectl=1.13.1-00
    # if you change kube version 
    # also use a SUPPORTED docker version for it
    - docker-ce=17.03.2~ce-0~ubuntu-xenial
    # leave those as is
    - apt-transport-https
    - ntp
## ** End Optional Edits ...
## If you edit past this line, 
## you really need to know what you do.
growpart:
    mode: auto
    devices: ["/"]
manage_etc_hosts: localhost
locale: "en_US.UTF-8"
apt_update: true
apt_upgrade: true
apt:
  sources:
      docker:
          keyid: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
          source: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
      kubernetes:
          keyid: "54A647F9048D5688D7DA2ABE6A030B21BA07F4FB"
          source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
package_update: true
package_upgrade: true
package_reboot_if_required: true
write_files:
  - path: /etc/environment
    content: |
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      KUBECONFIG=/etc/kubernetes/admin.conf
  - path: /etc/modules
    content: |
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      nf_conntrack_ipv4
  - path: /etc/sysctl.d/50-kube.conf
    content: |
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.bridge.bridge-nf-call-iptables=1
  - path: /etc/rc.local
    permissions: '0755'
    content: |
      #!/bin/sh
      cat /etc/modules | xargs -L1 modprobe
      cat /etc/sysctl.d/50-kube.conf | xargs -L1 sysctl
  - path: /usr/local/bin/kube-init
    permissions: '0755'
    content: |
      #!/bin/bash
      PUB_IP=${1:?external ip}
      PUB_PORT=${2:-6443}
      if test "$(whoami)" != root
      then echo "Please, run me as 'sudo $0 $@'" ; exit 1
      fi
      echo "*** Waiting for Cloud-Init to finish:"
      cloud-init status --wait
      source /etc/rc.local
      echo "*** Kubernetes Pulling Images:"
      kubeadm config images pull
      echo "*** Kubernetes Initializing:"
      kubeadm init \
      --apiserver-advertise-address "0.0.0.0" \
      --apiserver-cert-extra-sans "$PUB_IP" \
      --apiserver-bind-port "$PUB_PORT" | tee /tmp/kubeadm.log
      echo "*** Installing Weave:"
      K8S_VERSION="$(kubectl version | base64 | tr -d '\n')"
      kubectl apply -f \
      "https://cloud.weave.works/k8s/net?k8s-version=$K8S_VERSION"
      echo "*** Waiting for Kubernetes to get ready:"
      STATE="NotReady"
      while test "$STATE" != "Ready" ; do 
        STATE=$(kubectl get node | tail -1 | awk '{print $2}')
        echo -n "." ; sleep 1
      done
      echo ""
      grep "kubeadm join" /tmp/kubeadm.log >/etc/kubernetes/kubeadm-join.sh
      awk '{$3 = "'$PUB_IP:$PUB_PORT'"; print}' </etc/kubernetes/kubeadm-join.sh >/etc/kubernetes/kubeadm-join-ext.sh 
      echo "*** If you have a private network, initialize Workers with this command:"
      cat /etc/kubernetes/kubeadm-join.sh
      echo "*** If you only have a public network, initialize Workers with this command:"
      cat /etc/kubernetes/kubeadm-join-ext.sh
      # end
final_message: "Ready."
